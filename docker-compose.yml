version: '3'

services:
  db:
    image: postgres:12-alpine
    volumes: # should be commented when running locally
      - /var/lib/postgresql
    ports:
      - "${DB_PORT}"
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"

  front:
    image: "docker.pkg.github.com/$GITHUB_ORGANIZATION/$FRONT_GITHUB_REPO/$FRONT_GITHUB_PACKAGE:$RELEASE_VERSION"
    command: bash -c "serve -p 3000 -s ."

  api:
    image: "docker.pkg.github.com/$GITHUB_ORGANIZATION/$API_GITHUB_REPO/$API_GITHUB_PACKAGE:$RELEASE_VERSION"
    command: bash -c "bin/squadster start"
    restart: on-failure
    depends_on:
      - db

  bot:
    image: "docker.pkg.github.com/$GITHUB_ORGANIZATION/$BOT_GITHUB_REPO/$BOT_GITHUB_PACKAGE:$RELEASE_VERSION"
    command: sh -c "java --add-opens=java.base/jdk.internal.loader=ALL-UNNAMED -Dspring.profiles.active=release -jar /app.jar"
    restart: on-failure
    depends_on:
      - db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    ports:
      - "${ELASTICSEARCH_PORT}"
    environment:
      - "discovery.type=single-node"
    depends_on:
      - bot

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "${KIBANA_PORT}:5601"
    restart: on-failure
    depends_on:
      - elasticsearch

  nginx:
    build: nginx
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - api
      - front
