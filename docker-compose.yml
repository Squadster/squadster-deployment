version: '3.8'

networks:
  default:
    driver: overlay

services:
  db:
    image: postgres:12-alpine
    env_file:
      - .env.db
    volumes:
      - /var/lib/postgresql
    networks:
      - default
    ports:
      - target: 5432
        published: 5432

  front:
    image: "docker.pkg.github.com/squadster/squadster-frontend/frontend-release:latest"
    command: bash -c "serve -p 3000 -s ."
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  api:
    image: "docker.pkg.github.com/squadster/squadster-api/release:latest"
    command: bash -c "bin/squadster start"
    networks:
      - default
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  bot:
    image: "docker.pkg.github.com/squadster/mercury/bot:latest"
    command: sh -c "java --add-opens=java.base/jdk.internal.loader=ALL-UNNAMED -Dspring.profiles.active=release -jar /app.jar"
    networks:
      - default
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  nginx:
    image: "docker.pkg.github.com/squadster/squadster-deployment/nginx:latest"
    networks:
      - default
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    depends_on:
      - api
      - front
    environment:
      TZ: Etc/UTC
      LETSENCRYPT: 'true' # Set to true for the first time only
      LE_EMAIL: artoriousso@gmail.com
      LE_FQDN: squadster.wtf
      SSL_CERT: le-crt.pem
      SSL_KEY: le-key.pem
      SSL_CHAIN_CERT: le-chain-crt.pem

  # autoupdate services when their base image is refreshed
  # https://github.com/djmaze/shepherd
  shepherd:
    image: mazzolino/shepherd
    environment:
      - IMAGE_AUTOCLEAN_LIMIT=2
      - WITH_REGISTRY_AUTH=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
        - node.role == manager
